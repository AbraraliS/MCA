-- Create database (for MySQL) CREATE DATABASE IF NOT EXISTS STUD; USE STUD;

-- HOSTEL table CREATE TABLE HOSTEL ( HNO INT PRIMARY KEY, HNAME VARCHAR(50) UNIQUE, HADDR VARCHAR(100) NOT NULL, TOTAL_CAPACITY INT CHECK (TOTAL_CAPACITY > 0), WARDEN VARCHAR(50) NOT NULL );

-- ROOM table CREATE TABLE ROOM ( HNO INT, RNO INT, RTYPE VARCHAR(20), LOCATION VARCHAR(50), NO_OF_STUDENTS INT CHECK (NO_OF_STUDENTS >= 0), STATUS VARCHAR(10) CHECK (STATUS IN ('Occupied', 'Vacant')), PRIMARY KEY (HNO, RNO), FOREIGN KEY (HNO) REFERENCES HOSTEL(HNO) );

-- CHARGES table CREATE TABLE CHARGES ( HNO INT, RTYPE VARCHAR(20), CHARGES DECIMAL(8,2) CHECK (CHARGES >= 0), PRIMARY KEY (HNO, RTYPE), FOREIGN KEY (HNO) REFERENCES HOSTEL(HNO) );

-- STUDENT table CREATE TABLE STUDENT ( SID INT PRIMARY KEY, SNAME VARCHAR(50), MOBILE_NO VARCHAR(10) UNIQUE, GENDER CHAR(1) CHECK (GENDER IN ('M', 'F')), FACULTY VARCHAR(50), DEPT VARCHAR(50), CLASS VARCHAR(20), HNO INT, RNO INT, FOREIGN KEY (HNO, RNO) REFERENCES ROOM(HNO, RNO) );

-- FEES table CREATE TABLE FEES ( SID INT, FDATE DATE, FAMOUNT DECIMAL(8,2) CHECK (FAMOUNT >= 0), FOREIGN KEY (SID) REFERENCES STUDENT(SID) );

-- Sample INSERTS -- HOSTEL INSERT INTO HOSTEL VALUES (1, 'Chanakya', 'Block A', 10, 'Mr. Sharma'); INSERT INTO HOSTEL VALUES (2, 'Vivekananda', 'Block B', 8, 'Mrs. Rao');

-- ROOM INSERT INTO ROOM VALUES (1, 101, 'Single-Seated', 'First Floor', 1, 'Occupied'); INSERT INTO ROOM VALUES (1, 102, 'Double-Seated', 'First Floor', 2, 'Occupied'); INSERT INTO ROOM VALUES (1, 103, 'Single-Seated', 'Second Floor', 0, 'Vacant'); INSERT INTO ROOM VALUES (2, 201, 'Double-Seated', 'Ground Floor', 2, 'Occupied'); INSERT INTO ROOM VALUES (2, 202, 'Single-Seated', 'First Floor', 0, 'Vacant');

-- CHARGES INSERT INTO CHARGES VALUES (1, 'Single-Seated', 20000); INSERT INTO CHARGES VALUES (1, 'Double-Seated', 15000); INSERT INTO CHARGES VALUES (2, 'Single-Seated', 18000); INSERT INTO CHARGES VALUES (2, 'Double-Seated', 14000);

-- STUDENT INSERT INTO STUDENT VALUES (101, 'Amit', '9876543210', 'M', 'Engineering', 'Computer Science', 'MCA', 1, 101); INSERT INTO STUDENT VALUES (102, 'Sneha', '8765432109', 'F', 'Medical', 'Nursing', 'BSc', 1, 102); INSERT INTO STUDENT VALUES (103, 'Rahul', '7654321098', 'M', 'Engineering', 'Mechanical', 'BE', 1, 102); INSERT INTO STUDENT VALUES (104, 'Priya', '6543210987', 'F', 'Medical', 'Pharmacy', 'BPharm', 2, 201); INSERT INTO STUDENT VALUES (105, 'Neha', '5432109876', 'F', 'Engineering', 'Computer Science', 'MCA', 2, 201);

-- FEES INSERT INTO FEES VALUES (101, '2017-11-15', 30000); INSERT INTO FEES VALUES (102, '2017-06-01', 15000); INSERT INTO FEES VALUES (103, '2017-11-25', 15000); INSERT INTO FEES VALUES (104, '2017-10-10', 28000); INSERT INTO FEES VALUES (105, '2017-11-05', 28000);

-- Queries -- 1. Vacant rooms SELECT COUNT(*) AS VacantRooms FROM ROOM WHERE STATUS = 'Vacant';

-- 2. Students by faculty/department per hostel SELECT HNO, FACULTY, DEPT, COUNT(*) AS StudentCount FROM STUDENT GROUP BY HNO, FACULTY, DEPT;

-- 3. Hostels with single-seated room SELECT DISTINCT HNO FROM ROOM WHERE RTYPE = 'Single-Seated';

-- 4. Warden name and address of CS students SELECT H.WARDEN, H.HADDR FROM HOSTEL H JOIN STUDENT S ON H.HNO = S.HNO WHERE S.DEPT = 'Computer Science';

-- 5. Vacant single or double rooms SELECT * FROM ROOM WHERE STATUS = 'Vacant' AND RTYPE IN ('Single-Seated', 'Double-Seated');

-- 6. Hostels with medical students SELECT DISTINCT H.* FROM HOSTEL H JOIN STUDENT S ON H.HNO = S.HNO WHERE S.FACULTY = 'Medical';

-- 7. Hostels fully occupied SELECT H.HNO, H.HNAME FROM HOSTEL H JOIN ( SELECT HNO, SUM(NO_OF_STUDENTS) AS TotalStudents FROM ROOM GROUP BY HNO ) R ON H.HNO = R.HNO WHERE R.TotalStudents = H.TOTAL_CAPACITY;

-- 8. Students in double-seated rooms of Chanakya SELECT S.* FROM STUDENT S JOIN HOSTEL H ON S.HNO = H.HNO JOIN ROOM R ON S.HNO = R.HNO AND S.RNO = R.RNO WHERE R.RTYPE = 'Double-Seated' AND H.HNAME = 'Chanakya';

-- 9. Total students in each room type per hostel SELECT HNO, RTYPE, COUNT(*) AS StudentCount FROM STUDENT S JOIN ROOM R ON S.HNO = R.HNO AND S.RNO = R.RNO GROUP BY HNO, RTYPE;

-- 10. Students who paid in Nov 2017 SELECT S.* FROM STUDENT S JOIN FEES F ON S.SID = F.SID WHERE TO_CHAR(F.FDATE, 'MM-YYYY') = '11-2017';
